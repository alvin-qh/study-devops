---

version: "3"
services:
  kong-database:
    image: "postgres:9.6"
    container_name: "kong-database"
    volumes:
      - "kong_v:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_USER=kong"
      - "POSTGRES_DB=kong"
      - "POSTGRES_PASSWORD=kong"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: "30s"
      timeout: "30s"
      retries: 3
    # tty: true
    # stdin_open: true
    restart: "always"
    networks:
      - "kong_n"
  kong-db-migration:
    image: "kong:2.1.3"
    container_name: "kong-db-migration"
    depends_on:
      - "kong-database"
    environment:
      - "KONG_DATABASE=postgres"
      - "KONG_PG_HOST=kong-database"
      - "KONG_PG_USER=kong"
      - "KONG_PG_PASSWORD=kong"
    restart: "on-failure"
    networks:
      - "kong_n"
    command: "/usr/local/bin/kong migrations bootstrap"
  kong-migrations-up:
    image: "kong:2.1.3"
    container_name: "kong-migrations-up"
    depends_on:
      - "kong-database"
    environment:
      - "KONG_DATABASE=postgres"
      - "KONG_PG_HOST=kong-database"
      - "KONG_PG_USER=kong"
      - "KONG_PG_PASSWORD=kong"
    restart: on-failure
    networks:
      - "kong_n"
    command: "/usr/local/bin/kong migrations up && /usr/local/bin/kong migrations finish"
  kong:
    image: "kong:2.1.3"
    container_name: "kong"
    depends_on:
      - "kong-database"
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    environment:
      - "KONG_DATABASE=postgres"
      - "KONG_PG_HOST=kong-database"
      - "KONG_PG_USER=kong"
      - "KONG_PG_PASSWORD=kong"
      - "KONG_CASSANDRA_CONTACT_POINTS=kong-database"
      - "KONG_PROXY_ACCESS_LOG=/dev/stdout"
      - "KONG_ADMIN_ACCESS_LOG=/dev/stdout"
      - "KONG_PROXY_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl"
    restart: "always"
    networks:
      - "kong_n"
volumes:
  kong_v: {}
networks:
  kong_n:
