<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>alvin.study</groupId>
  <artifactId>study-maven-package</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>${project.artifactId}</name>
  <packaging>jar</packaging>
  <url>http://study.maven.alvin</url>

  <!-- 项目属性 -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>

    <version.junit>5.8.2</version.junit>
    <version.guava>31.0.1-jre</version.guava>
    <version.maven-compiler>3.8.1</version.maven-compiler>
    <version.maven-surefire>2.22.2</version.maven-surefire>
    <version.maven-exec>3.0.0</version.maven-exec>
    <version.maven-jar>3.2.1</version.maven-jar>
    <version.maven-dependency>3.2.0</version.maven-dependency>
    <version.maven-assembly>3.3.0</version.maven-assembly>
    <version.maven-shade>3.2.4</version.maven-shade>
  </properties>

  <!-- 依赖声明，所有子项目可使用声明后的依赖 -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${version.junit}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${version.guava}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- 依赖引用 -->
  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>      <!-- 使用被声明的依赖，无需指定版本 -->
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>      <!-- 依赖仅在测试时引入 -->
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
  </dependencies>

  <!-- 项目构建 -->
  <build>
    <plugins>
      <!-- 编译插件 -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${version.maven-compiler}</version>
        <configuration>
          <source>11</source>
          <target>11</target>
        </configuration>
      </plugin>

      <!-- 单元测试插件 -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.maven-surefire}</version>
      </plugin>

      <!-- 执行器插件 -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${version.maven-exec}</version>
        <executions>
          <execution>
            <id>main</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>alvin.study.maven.Main</mainClass>
              <workingdir>${project.root.directory}</workingdir>
              <arguments>
                <argument>12</argument>
                <argument>13</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>dir</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>ls</executable>
              <arguments>
                <argument>-al</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <environmentVariables>
            <WORK_DIR>./target</WORK_DIR>
          </environmentVariables>
        </configuration>
      </plugin>

      <!-- thin jar 打包插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${version.maven-jar}</version>
        <configuration>
          <finalName>${project.artifactId}-${project.version}</finalName>
          <archive>
            <index>true</index>
            <manifest>
              <mainClass>alvin.study.maven.Main</mainClass>
              <addClasspath>true</addClasspath>
              <classpathPrefix>./lib/</classpathPrefix>
              <useUniqueVersions>false</useUniqueVersions>              <!-- 依赖是否使用带有时间戳的唯一版本号, 如:xxx-1.3.0-20121225.012733.jar -->
            </manifest>
            <manifestEntries>
              <mode>development</mode>
              <url>${project.url}</url>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <!-- 依赖 copy 插件依赖 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${version.maven-dependency}</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- 打包 fat jar，将依赖打包到 jar 文件中 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${version.maven-assembly}</version>
        <configuration>
          <finalName>${project.artifactId}-${project.version}-fat</finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <archive>
            <manifest>
              <mainClass>alvin.study.maven.Main</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- 打包 fat jar，将依赖打包到 jar 文件中 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${version.maven-shade}</version>
        <configuration>
          <finalName>${project.artifactId}-${project.version}-shade</finalName>
          <createDependencyReducedPom>false</createDependencyReducedPom>
          <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
            <mainClass>alvin.study.maven.Main</mainClass>
          </transformer>
          <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
            <resource>META-INF/spring.handlers</resource>
          </transformer>
          <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
            <resource>META-INF/spring.schemas</resource>
          </transformer>
        </configuration>
        <executions>
          <execution>
            <id>make-shade</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
