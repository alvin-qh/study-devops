# 测试 Ansible 变量

# 使用内置内置变量
- name: Ansible builtin variables
  hosts: group_debian1
  user: alvin
  connection: ssh
  gather_facts: True # 要求从远程主机返回内置变量值
  tags: G1
  tasks:
    - name: Show ansible builtin variables
      debug:
        msg:
          - "Default IPV4: {{ ansible_default_ipv4 }}" # 获取远程主机的 ipv4 地址
          - "Architecture: {{ ansible_architecture }}" # 获取远程主机的 CPU 架构
          - "Distribution: {{ ansible_distribution }}" # 获取远程主机的 OS 描述

# 使用自定义变量
- name: User define variables
  hosts: group_debian1
  user: alvin
  connection: ssh
  gather_facts: False
  tags: G2
  vars: # 定义自定义变量
    user_name: Alvin
    home_page: https://www.alvin.edu/ansible/playbook
  tasks:
    - name: Show user define variables
      debug:
        msg:
          - "User name: {{ user_name | default('Unknown') }}" # Get variables or default value
          - "User age: {{ user_age | default('Unknown') }}"
          - "Home page: {{ home_page | default('Unknown') }}"

# 使用外部变量文件
- name: Include variables file
  hosts: group_debian1
  user: alvin
  connection: ssh
  gather_facts: False
  tags: G3
  tasks:
    # 未引入外部变量文件
    - name: Show variables before include file
      debug:
        msg:
          - "Variable A: {{ var_a | default('Unknown') }}"
          - "Variable B: {{ var_b | default('Unknown') }}"

    # 引入外部变量文件
    - name: Include vars from file
      include_vars: var/test_var.yml # 引入外部变量文件

    # 引入外部变量后
    - name: Show variables after include file
      debug:
        msg:
          - "Variable A: {{ var_a | default('Unknown') }}"
          - "Variable B: {{ var_b | default('Unknown') }}"

# 使用环境变量
- name: Environment variables
  hosts: group_debian1
  user: alvin
  connection: ssh
  tags: G4
  environment: # 设置当前进程环境变量
    VAR_MSG: Welcome to Ansible
  tasks:
    # 获取环境变量
    - name: Show global environment variable
      debug:
        msg:
          - "All: {{ ansible_env }}" # ansible_env 变量包含了远程主机的全部环境变量
          - "ansible_env.USER: {{ ansible_env.USER }}" # 获取存储用户名的环境变量
          - "{{ ansible_env.VAR_MSG }}" # 获取通过 environment 字段设置的环境变量

    # 查找环境变量
    - name: Show exported environment variable named "VAR_MSG"
      debug:
        msg:
          - "{{ lookup('env', 'VAR_MSG') }}" # 查找名为 VAR_MSG 的环境变量
      when: lookup('env', 'VAR_MSG') is defined

# 使用 facts 变量
- name: All variables
  hosts: group_debian1
  user: alvin
  connection: ssh
  tags: G5
  gather_facts: True # 要求从远程主机返回内置变量值
  tasks:
    - name: Run setup module
      setup:
      register: ansible_variables

    - name: Show ansible builtin ansible variables
      debug:
        msg:
          - "All: {{ ansible_variables }}" # 输出所有以 ansible_ 的内置变量
          - "Architecture: {{ ansible_architecture }}"

    - name: Show ansible facts variables
      debug:
        msg:
          - "All: {{ ansible_facts }}" # 输出所有 ansible_facts 包含的所有变量值
          - "Architecture: {{ ansible_facts.architecture }}"

# 在任务内部设置变量
- name: Set variables in task
  hosts: group_debian1
  user: alvin
  connection: ssh
  gather_facts: False
  tags: G6
  tasks:
    - name: Set variables "a" and "b"
      set_fact: # 为 ansible_fact 值设置变量 a, b 的值
        a: var_a
        b: var_b

    - name: Show variable name "a" and "b"
      debug:
        msg:
          - "var 'a' is: {{ a }}" # 使用 a, b 变量
          - "var 'b' is: {{ b }}"
