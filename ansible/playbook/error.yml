# 错误处理

# 对错误进行忽略，令所有任务都能得到执行
- name: Ignoring failed commands
  hosts: group_debian1
  user: alvin
  connection: ssh
  gather_facts: False
  tags: G1
  tasks:
    - name: Do not count this as a failure
      command: /usr/bin/false
      ignore_errors: True # 忽略所有错误，让所有任务都能被执行

    - name: Still working
      command: /usr/bin/true

# 忽略远程主机无法访问错误
- name: Ignoring unreachable host errors
  hosts: group_unknown # 定义一组不存在的远程主机
  user: alvin
  connection: ssh
  gather_facts: False # 不收集远程主机信息，否则任务无法执行
  tags: G2
  tasks:
    # 远程访问错误，错误被忽略
    - name: This task failed and the failure is ignored
      command: /usr/bin/true
      ignore_unreachable: True # 忽略远程主机无法访问错误

    # 远程访问错误，错误不被忽略
    - name: This task failed and ends the play on same host
      command: /usr/bin/true

    # 因前一个任务未忽略错误，所以该任务无法被执行
    - name: This task never execute
      debug:
        msg: Cannot execute

# 定义失败条件
- name: Defining failure
  hosts: group_debian1
  user: alvin
  connection: ssh
  gather_facts: False
  tags: G3
  tasks:
    # 如果命令输出中包含 "Error" 字符串，则定义为失败
    - name: Fail task when result of command contains "Error" string
      command: 'echo "Error: this command was failed"'
      register: command_result
      failed_when: ("Error" in command_result.stdout) # 定义失败条件
      ignore_errors: True

    # 如果命令进程返回代码 0，则定义为失败
    - name: Fail task when shell process return 0
      raw: echo "Hello World"
      register: command_result
      failed_when: command_result.rc == 0
      ignore_errors: True

    # 组合多种条件定义失败
    - name: Check if a file exists in temp and fail task if it does
      command: ls /tmp/this_should_not_be_here
      register: command_result
      failed_when: # 组合进程返回代码和输出内容，共同定义失败条件
        - result.rc == 0
        - ("No such file" in result.stdout)
      ignore_errors: True

    # 多种条件任意满足，作为失败条件
    - name: Example of many failed_when conditions with "OR"
      shell: ./not_exist_path
      register: shell_result
      failed_when: > # 利用 or 连接多个失败条件
        ("No such file or directory" in shell_result.stdout) or
        (ret.stderr != '') or
        (ret.rc == 10)
      ignore_errors: True

# 定义变化条件
- name: Defining changed
  hosts: group_debian1
  user: alvin
  connection: ssh
  gather_facts: False
  tags: G4
  tasks:
    # 当命令执行状态为 0，表示主机发生改变
    - name: Report "changed" when the return code is not equal to 0
      shell: /usr/bin/true
      register: shell_result
      changed_when: shell_result.rc == 0

    # 该任务永远不会令主机发生改变（即便实时上改变了主机）
    - name: This will never report "changed" status
      shell: /usr/bin/true
      changed_when: False

    # 组合多个条件判断主机是否发生改变
    - name: Combine multiple conditions to override "changed" result
      command: /usr/bin/false
      register: command_result
      ignore_errors: True
      changed_when:
        - command_result.stderr == ''
        - command_result.rc == 1

# 确保远程命令行执行成功
- name: Ensuring success for command and shell
  hosts: group_debian1
  user: alvin
  connection: ssh
  gather_facts: False
  tags: G5
  tasks:
    # 对于 shell 命令，可以通过 || /usr/bin/true 方式确保执行成功
    - name: Run this shell command and ignore the result
      shell: /usr/bin/bad_command || /usr/bin/true

    # 对于 raw 命令，可以通过 || /usr/bin/true 方式确保执行成功
    - name: Run this raw command and ignore the result
      raw: /usr/bin/bad_command || /usr/bin/true

# 当错误发生时停止整个
- name: Aborting on the first error
  hosts:
    - group_debian1
    - group_centos1
  user: alvin
  connection: ssh
  tags: G6-1
  tasks:
    - name: Task 1 (CentOS)
      shell: /usr/bin/false
      when: ansible_distribution == "CentOS"

    - name: Task 1 (Debian)
      shell: /usr/bin/true
      when: ansible_distribution == "Debian"

    - name: Task 2 (Never executed, cause "Task 1(CentOS)" error)
      shell: /usr/bin/true
  any_errors_fatal: True # 发生任意错误时停止执行

# 设置最大错误率
- name: Setting a maximum failure percentage
  hosts:
    - group_debian1
    - group_centos1
  user: alvin
  connection: ssh
  gather_facts: False
  tags: G6-2
  vars: # 获取 3 各随机变量
    t1: "{{ 10 | random % 2 == 0}}"
    t2: "{{ 10 | random % 2 == 0}}"
    t3: "{{ 10 | random % 2 == 0}}"
  tasks: # 根据随机变量值，随机导致任务错误或跳过
    - name: Task 1
      shell: /usr/bin/false
      when: (t1 % 2 == 0)

    - name: Task 2
      shell: /usr/bin/false
      when: (t2 % 2 == 0)

    - name: Task 3
      shell: /usr/bin/false
      when: (t3 % 2 == 0)
  max_fail_percentage: 95
  serial: 2
