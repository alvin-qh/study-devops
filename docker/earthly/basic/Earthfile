VERSION 0.7

# 定义构建任务

# 构建任务
build:
  # 基座镜像
  FROM golang:1.20.4-alpine3.18

  # 工作目录
  WORKDIR /build

  # 环境变量
  ENV GO111MODULE=on
  ENV GOPROXY=https://goproxy.cn

  # 复制文件构建文件
  COPY go.mod go.sum .

  # 执行命令, 下载 GO 依赖包
  RUN go mod download

  # 复制源码文件
  COPY main.go .

  # 执行编译
  RUN go build -o target/go-demo main.go

  # 保存编译结果到 +build/go-demo 位置
  SAVE ARTIFACT target/go-demo /go-demo

# 打包任务
docker:
  # 基座镜像
  FROM alpine:3.18

  # 定义参数
  ARG REGISTRY_URL
  ARG USERNAME=alvin
  ARG PASSWORD=123456

  # 工作目录
  WORKDIR /binary

  # 从 build 任务结果中复制文件
  COPY +build/go-demo .

  # 指定执行入口
  ENTRYPOINT ["/binary/go-demo"]

  # 判断有无传递镜像注册服务器地址
  IF [ -z $REGISTRY_URL ]
    # 使用本地镜像名称打包
    SAVE IMAGE go-demo:1.0
  ELSE
    # 使用注册服务器地址为前缀进行打包
    # 如果 earthly 调用时传递了 --push 参数, 则将镜像推送到指定的镜像地址上
    SAVE IMAGE --push --insecure $REGISTRY_URL/go-demo:1.0
  END
